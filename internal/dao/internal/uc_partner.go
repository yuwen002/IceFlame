// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UcPartnerDao is the data access object for table uc_partner.
type UcPartnerDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns UcPartnerColumns // columns contains all the column names of Table for convenient usage.
}

// UcPartnerColumns defines and stores column names for table uc_partner.
type UcPartnerColumns struct {
	Id            string //
	AccountId     string // 关联登入用户表ID
	Fid           string // 上级id
	TopId         string // 顶级id
	LevelId       string // 级别id
	Depth         string // 层级深度
	IsAgent       string // 是否是代理商:1=是,0=否
	Path          string // 层级路径
	JoinStoreNum  string // 入驻商家数
	TeamNum       string // 团队人数
	PromotionType string // 晋级方式:1系统自动,0手动
	CreatedAt     string //
	UpdatedAt     string //
}

// ucPartnerColumns holds the columns for table uc_partner.
var ucPartnerColumns = UcPartnerColumns{
	Id:            "id",
	AccountId:     "account_id",
	Fid:           "fid",
	TopId:         "top_id",
	LevelId:       "level_id",
	Depth:         "depth",
	IsAgent:       "is_agent",
	Path:          "path",
	JoinStoreNum:  "join_store_num",
	TeamNum:       "team_num",
	PromotionType: "promotion_type",
	CreatedAt:     "created_at",
	UpdatedAt:     "updated_at",
}

// NewUcPartnerDao creates and returns a new DAO object for table data access.
func NewUcPartnerDao() *UcPartnerDao {
	return &UcPartnerDao{
		group:   "default",
		table:   "uc_partner",
		columns: ucPartnerColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UcPartnerDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UcPartnerDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UcPartnerDao) Columns() UcPartnerColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UcPartnerDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UcPartnerDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UcPartnerDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
