// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UcEmployeeDao is the data access object for table uc_employee.
type UcEmployeeDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns UcEmployeeColumns // columns contains all the column names of Table for convenient usage.
}

// UcEmployeeColumns defines and stores column names for table uc_employee.
type UcEmployeeColumns struct {
	Id               string //
	AccountId        string // 关联用户ID
	Name             string // 姓名
	Tel              string // 电话
	WxUnionId        string // 关联用户unionId
	WxOpenId         string // 关联用户微信OpenId
	InvitationCode   string // 员工员邀请码
	InvitationQrcode string // 推广二维码
	RealNameType     string // 实名状态(1=未实名2=已上传未审核3=审核驳回4=实名成功)
	CreatedAt        string //
	UpdatedAt        string //
}

// ucEmployeeColumns holds the columns for table uc_employee.
var ucEmployeeColumns = UcEmployeeColumns{
	Id:               "id",
	AccountId:        "account_id",
	Name:             "name",
	Tel:              "tel",
	WxUnionId:        "wx_union_id",
	WxOpenId:         "wx_open_id",
	InvitationCode:   "invitation_code",
	InvitationQrcode: "invitation_qrcode",
	RealNameType:     "real_name_type",
	CreatedAt:        "created_at",
	UpdatedAt:        "updated_at",
}

// NewUcEmployeeDao creates and returns a new DAO object for table data access.
func NewUcEmployeeDao() *UcEmployeeDao {
	return &UcEmployeeDao{
		group:   "default",
		table:   "uc_employee",
		columns: ucEmployeeColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UcEmployeeDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UcEmployeeDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UcEmployeeDao) Columns() UcEmployeeColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UcEmployeeDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UcEmployeeDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UcEmployeeDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
